---

- name: "Create .pyenv dir"
  file:
    path: "{{ PYENV_DIR_NAME }}"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0755

- name: Install pyenv + pyenv-virtualenv
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    clone: yes
    update: no
  with_items:
    - {repo: "{{ PYENV_REPO_NAME }}", dest: "{{ PYENV_DIR_PATH }}"}
    - {repo: "{{ PYENV_VIRTUALENV_REPO_NAME }}", dest: "{{ PYENV_VIRTUALENV_DIR_PATH }}"}

- name: "Put rendered pyenvrc.j2 local file to remote {{ PYENV_DIR_PATH }}/ as .pyenvrc file"
  template:
    src: "pyenvrc.j2"
    dest: "{{ PYENV_DIR_PATH }}/.pyenvrc"
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
    mode: 0644

- name: Source .pyenvrc file into .bashrc
  lineinfile: dest="{{ ansible_env.HOME }}/.bashrc"
              line="source {{ PYENV_DIR_PATH }}/.pyenvrc"

- name: Install preferred Python interpreter "{{ PYTHON_VERSION }}"
  shell: source {{ PYENV_DIR_PATH }}/.pyenvrc && pyenv install {{ PYTHON_VERSION }} && pyenv rehash
  args:
    creates: "{{ PYENV_DIR_PATH }}/versions/{{ PYTHON_VERSION }}/bin/python"  # a filename, when it already exists, this task will not run
    executable: /bin/bash

- name: Create virtual environment
  shell: source {{ PYENV_DIR_PATH }}/.pyenvrc && pyenv virtualenv {{ PYTHON_VERSION }} {{ VIRTUALENV_NAME }}
  args:
    creates: "{{ PYENV_DIR_PATH }}/versions/{{ VIRTUALENV_NAME }}/bin/python"  # a filename, when it already exists, this step will not be run.
    executable: /bin/bash
